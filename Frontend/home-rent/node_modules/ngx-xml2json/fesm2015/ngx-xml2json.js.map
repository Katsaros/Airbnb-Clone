{"version":3,"file":"ngx-xml2json.js.map","sources":["ng://ngx-xml2json/lib/ngx-xml2json.service.ts","ng://ngx-xml2json/lib/ngx-xml2json.component.ts","ng://ngx-xml2json/lib/ngx-xml2json.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxXml2jsonService {\n\n  constructor() { }\n\n  xmlToJson(xml) {\n\n    let obj = {};\n\n    if (xml.nodeType === 1) {\n      if (xml.attributes.length > 0) {\n        obj['@attributes'] = {};\n        for (let j = 0; j < xml.attributes.length; j += 1) {\n          const attribute = xml.attributes.item(j);\n          obj['@attributes'][attribute.nodeName] = attribute.nodeValue;\n        }\n      }\n    } else if (xml.nodeType === 3) {\n      obj = xml.nodeValue;\n    }\n\n    if (xml.hasChildNodes() && xml.childNodes.length === 1 && xml.childNodes[0].nodeType === 3) {\n      obj = xml.childNodes[0].nodeValue;\n    } else if (xml.hasChildNodes()) {\n      for (let i = 0; i < xml.childNodes.length; i += 1) {\n        const item = xml.childNodes.item(i);\n        const nodeName = item.nodeName;\n        if (typeof (obj[nodeName]) === 'undefined') {\n          obj[nodeName] = this.xmlToJson(item);\n        } else {\n          if (typeof (obj[nodeName].push) === 'undefined') {\n            const old = obj[nodeName];\n            obj[nodeName] = [];\n            obj[nodeName].push(old);\n          }\n          obj[nodeName].push(this.xmlToJson(item));\n        }\n      }\n    }\n    return obj;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-xml2json',\n  template: `\n    <p>\n      Ngx-xml2json\n    </p>\n  `,\n  styles: []\n})\nexport class NgxXml2jsonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxXml2jsonComponent } from './ngx-xml2json.component';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [NgxXml2jsonComponent],\n  exports: [NgxXml2jsonComponent]\n})\nexport class NgxXml2jsonModule { }\n"],"names":[],"mappings":";;;;;;AAAA;IAOE,iBAAiB;;;;;IAEjB,SAAS,CAAC,GAAG;QAEX,qBAAI,GAAG,GAAG,EAAE,CAAC;QAEb,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;YACtB,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,GAAG,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;gBACxB,KAAK,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;oBACjD,uBAAM,SAAS,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC;iBAC9D;aACF;SACF;aAAM,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;YAC7B,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC;SACrB;QAED,IAAI,GAAG,CAAC,aAAa,EAAE,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE;YAC1F,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;SACnC;aAAM,IAAI,GAAG,CAAC,aAAa,EAAE,EAAE;YAC9B,KAAK,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;gBACjD,uBAAM,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpC,uBAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC/B,IAAI,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,WAAW,EAAE;oBAC1C,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;iBACtC;qBAAM;oBACL,IAAI,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;wBAC/C,uBAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;wBAC1B,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;wBACnB,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACzB;oBACD,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC1C;aACF;SACF;QACD,OAAO,GAAG,CAAC;KACZ;;;YA1CF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;ACJD;IAaE,iBAAiB;;;;IAEjB,QAAQ,MAAK;;;YAbd,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE;;;;GAIT;gBACD,MAAM,EAAE,EAAE;aACX;;;;;;;;;ACVD;;;YAGC,QAAQ,SAAC;gBACR,OAAO,EAAE,EACR;gBACD,YAAY,EAAE,CAAC,oBAAoB,CAAC;gBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;aAChC;;;;;;;;;;;;;;;"}
