{"version":3,"file":"toast.d.ts","sources":["toast.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, EventEmitter, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';\nimport { NgbToastConfig } from './toast-config';\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\nexport declare class NgbToastHeader {\n}\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\nexport declare class NgbToast implements AfterContentInit, OnChanges {\n    ariaLive: string;\n    private _timeoutID;\n    /**\n     * Delay after which the toast will hide (ms).\n     * default: `500` (ms) (inherited from NgbToastConfig)\n     */\n    delay: number;\n    /**\n     * Auto hide the toast after a delay in ms.\n     * default: `true` (inherited from NgbToastConfig)\n     */\n    autohide: boolean;\n    /**\n     * Text to be used as toast's header.\n     * Ignored if a ContentChild template is specified at the same time.\n     */\n    header: string;\n    /**\n     * A template like `<ng-template ngbToastHeader></ng-template>` can be\n     * used in the projected content to allow markup usage.\n     */\n    contentHeaderTpl: TemplateRef<any> | null;\n    /**\n     * An event fired immediately when toast's `hide()` method has been called.\n     * It can only occur in 2 different scenarios:\n     * - `autohide` timeout fires\n     * - user clicks on a closing cross (&times)\n     *\n     * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n     * that.\n     */\n    hideOutput: EventEmitter<void>;\n    constructor(ariaLive: string, config: NgbToastConfig);\n    ngAfterContentInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    hide(): void;\n    private _init;\n    private _clearTimeout;\n}\n"]}