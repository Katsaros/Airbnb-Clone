{"version":3,"file":"tabset.d.ts","sources":["tabset.d.ts"],"names":[],"mappingssourcesContent":["import { AfterContentChecked, EventEmitter, QueryList, TemplateRef } from '@angular/core';\nimport { NgbTabsetConfig } from './tabset-config';\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nexport declare class NgbTabTitle {\n    templateRef: TemplateRef<any>;\n    constructor(templateRef: TemplateRef<any>);\n}\n/**\n * A directive to wrap content to be displayed in a tab.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nexport declare class NgbTabContent {\n    templateRef: TemplateRef<any>;\n    constructor(templateRef: TemplateRef<any>);\n}\n/**\n * A directive representing an individual tab.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nexport declare class NgbTab implements AfterContentChecked {\n    /**\n     * The tab identifier.\n     *\n     * Must be unique for the entire document for proper accessibility support.\n     */\n    id: string;\n    /**\n     * The tab title.\n     *\n     * Use the [`NgbTabTitle`](#/components/tabset/api#NgbTabTitle) directive for non-string titles.\n     */\n    title: string;\n    /**\n     * If `true`, the current tab is disabled and can't be toggled.\n     */\n    disabled: boolean;\n    titleTpl: NgbTabTitle | null;\n    contentTpl: NgbTabContent | null;\n    titleTpls: QueryList<NgbTabTitle>;\n    contentTpls: QueryList<NgbTabContent>;\n    ngAfterContentChecked(): void;\n}\n/**\n * The payload of the change event fired right before the tab change.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nexport interface NgbTabChangeEvent {\n    /**\n     * The id of the currently active tab.\n     */\n    activeId: string;\n    /**\n     * The id of the newly selected tab.\n     */\n    nextId: string;\n    /**\n     * Calling this function will prevent tab switching.\n     */\n    preventDefault: () => void;\n}\n/**\n * A component that makes it easy to create tabbed interface.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nexport declare class NgbTabset implements AfterContentChecked {\n    static ngAcceptInputType_justify: string;\n    static ngAcceptInputType_orientation: string;\n    justifyClass: string;\n    tabs: QueryList<NgbTab>;\n    /**\n     * The identifier of the tab that should be opened **initially**.\n     *\n     * For subsequent tab switches use the `.select()` method and the `(tabChange)` event.\n     */\n    activeId: string;\n    /**\n     * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n     */\n    destroyOnHide: boolean;\n    /**\n     * The horizontal alignment of the tabs with flexbox utilities.\n     */\n    set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified');\n    /**\n     * The orientation of the tabset.\n     */\n    orientation: 'horizontal' | 'vertical';\n    /**\n     * Type of navigation to be used for tabs.\n     *\n     * Currently Bootstrap supports only `\"tabs\"` and `\"pills\"`.\n     *\n     * Since `3.0.0` can also be an arbitrary string (ex. for custom themes).\n     */\n    type: 'tabs' | 'pills' | string;\n    /**\n     * A tab change event emitted right before the tab change happens.\n     *\n     * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n     */\n    tabChange: EventEmitter<NgbTabChangeEvent>;\n    constructor(config: NgbTabsetConfig);\n    /**\n     * Selects the tab with the given id and shows its associated content panel.\n     *\n     * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n     * hidden depending on the `destroyOnHide` value.\n     */\n    select(tabId: string): void;\n    ngAfterContentChecked(): void;\n    private _getTabById;\n}\n"]}